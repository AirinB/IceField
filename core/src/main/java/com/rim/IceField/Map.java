package com.rim.IceField;

import java.util.ArrayList;

public class Map {

    //I am not sure if we need Arraylist<PlayerBase> players as attribute, because players are instantiated outside the Map class in main, when the user selects the characters.
    //They will be generated by graphics, but that's another iteration.

      //No Blizzard needed: explained in Blizzard class

      //private Blizzard blizzard;
      private ArrayList<Iceberg> icebergs;
      private ArrayList<ItemBase> items;



    public ArrayList<Iceberg> getIcebergs() {
        return icebergs;
    }


    public ArrayList<ItemBase> getItems() {
        return items;
    }

//    public Blizzard getBlizzard(){
//        return blizzard;
//    }


    public Map(){

        //this.blizzard = new Blizzard();
        this.items = new ArrayList<ItemBase>();
        this.icebergs =  new ArrayList<Iceberg>();


    }





    public void generateItemsOnMap() {


         // - - - - - - - - - - - - - - - - - - - - - Items - - - - - - - - - - - - - - - - - - - - -

        //This is done for the test-cases needed in this iteration.

         ItemBase shovel = new ItemBase("shovel");
         items.add(shovel);

         ItemBase rope = new ItemBase("rope");
         items.add(rope);

         ItemBase food = new ItemBase("food");
         items.add(food);

         ItemBase flare = new ItemBase("flare");
         items.add(flare);

         ItemBase divingSuit = new ItemBase("divingSuit");
         items.add(divingSuit);

         ItemBase gun = new ItemBase("gun");
         items.add(gun);

         System.out.println("Items were generated!");




          // - - - - - - - - - - - - - - - - - - - - - Icebergs - - - - - - - - - - - - - - - - - - - - -



          //Items have to be added by Dinu to adjust it to the test-cases.


          Iceberg first = new Iceberg(true, 1, "stable", 20, false, 1, null  );
          icebergs.add(first);

          Iceberg second = new Iceberg(true, 2, "instable", 3, false, 2, null  );
          icebergs.add(second);

          Iceberg third = new Iceberg(true, 3, "stable", 20, false, 3, null  );
          icebergs.add(third);

          Iceberg forth = new Iceberg(true, 4, "hole", 0, false, 2, null  );
          icebergs.add(forth);

          Iceberg fifth = new Iceberg(true, 5, "stable", 20, false, 1, null );
          icebergs.add(fifth);

          System.out.println("Icebergs were generated!");

    }

}
